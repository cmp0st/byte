// Code generated by protoc-gen-connect-swift. DO NOT EDIT.
// swift-format-ignore-file
// swiftlint:disable:this file all
//
// Source: devices/v1/devices.proto
//

import Connect
import Foundation
import SwiftProtobuf

/// DeviceService provides device registration and management functionality
public protocol Devices_V1_DeviceServiceClientInterface: Sendable {

    @available(iOS 13, *)
    func `createDevice`(request: Devices_V1_CreateDeviceRequest, headers: Connect.Headers) async -> ResponseMessage<Devices_V1_CreateDeviceResponse>

    @available(iOS 13, *)
    func `listDevices`(request: Devices_V1_ListDevicesRequest, headers: Connect.Headers) async -> ResponseMessage<Devices_V1_ListDevicesResponse>

    @available(iOS 13, *)
    func `deleteDevice`(request: Devices_V1_DeleteDeviceRequest, headers: Connect.Headers) async -> ResponseMessage<Devices_V1_DeleteDeviceResponse>
}

/// Concrete implementation of `Devices_V1_DeviceServiceClientInterface`.
public final class Devices_V1_DeviceServiceClient: Devices_V1_DeviceServiceClientInterface, Sendable {
    private let client: Connect.ProtocolClientInterface

    public init(client: Connect.ProtocolClientInterface) {
        self.client = client
    }

    @available(iOS 13, *)
    public func `createDevice`(request: Devices_V1_CreateDeviceRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Devices_V1_CreateDeviceResponse> {
        return await self.client.unary(path: "/devices.v1.DeviceService/CreateDevice", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `listDevices`(request: Devices_V1_ListDevicesRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Devices_V1_ListDevicesResponse> {
        return await self.client.unary(path: "/devices.v1.DeviceService/ListDevices", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    @available(iOS 13, *)
    public func `deleteDevice`(request: Devices_V1_DeleteDeviceRequest, headers: Connect.Headers = [:]) async -> ResponseMessage<Devices_V1_DeleteDeviceResponse> {
        return await self.client.unary(path: "/devices.v1.DeviceService/DeleteDevice", idempotencyLevel: .unknown, request: request, headers: headers)
    }

    public enum Metadata {
        public enum Methods {
            public static let createDevice = Connect.MethodSpec(name: "CreateDevice", service: "devices.v1.DeviceService", type: .unary)
            public static let listDevices = Connect.MethodSpec(name: "ListDevices", service: "devices.v1.DeviceService", type: .unary)
            public static let deleteDevice = Connect.MethodSpec(name: "DeleteDevice", service: "devices.v1.DeviceService", type: .unary)
        }
    }
}
